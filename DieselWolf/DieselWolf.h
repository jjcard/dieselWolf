void ComputeMinimax();
int Min(int depth, int &maxFoundSoFar);
int Max(int depth, int &minFoundSoFar);
int EvaluateMax(int moves[100][4], int &moveCount, int depth);
int EvaluateMin(int moves[100][4], int &moveCount, int depth);
void GetPlayerMove();
void Setup();
void Printboard();
void MakeMove(int move[4], int pieceTaken[3]);
void RetractMove(int move[4], int pieceTaken[3]);
int GetPossibleMovesMin(int re[100][4]);
int GetPossibleMovesMax(int re[100][4]);
bool MoveInBounds(int to_col, int to_row);
void MoveKnight(int re[100][4], int &count, int i, int j, int kingVal);
void MoveKing(int re[100][4], int &count, int i, int j);
void MoveBishop(int re[100][4], int &count, int i, int j, int kingVal);
bool FoundWholeMove(int re[100][4], int count, int to_row, int to_col, int from_row, int from_col);
bool IsMovePossibleMin(int re[100][4], int count, int from_row, int from_col, int to_row, int to_col);
void GameOver(bool maxPlayerOne);
bool IsPlayerGoingFirst();
void SortMoves(int moves[100][4], int &moveCount, int depth);